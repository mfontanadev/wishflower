{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"m_",
				"m_ladybug"
			],
			[
				"C_ANIM_",
				"C_ANIM_SIDE_TO_SIDE"
			],
			[
				"C_a",
				"C_ANIM_SIDE_TO_SIDE"
			],
			[
				"C_la",
				"C_LADYBUG_SIDETOSIDE_STATE_LOOKAT_RIGHT"
			],
			[
				"m_side",
				"m_sideToSideState"
			],
			[
				"isAnimation_",
				"isAnimation_SIDE_TO_SIDE"
			],
			[
				"m_key",
				"m_keyPathFromAddedWish"
			],
			[
				"start",
				"starUpdateProcess"
			],
			[
				"stop",
				"stopUpdateProcess"
			],
			[
				"set",
				"setIconTouched"
			],
			[
				"rende",
				"renderText"
			],
			[
				"C_ANIMATION_",
				"C_ANIMATION_FIND"
			],
			[
				"m_s",
				"m_showMainHelp"
			],
			[
				"C_STATE_HELP_",
				"C_STATE_HELP_WRITE"
			],
			[
				"lbl",
				"m_lblWish"
			],
			[
				"m_wis",
				"m_wishes"
			],
			[
				"totalL",
				"totalLeaves"
			],
			[
				"m_treeGr",
				"m_treeGrowedLeaves"
			],
			[
				"layer",
				"layerHeight"
			],
			[
				"for",
				"for\tfor (…) {…}"
			],
			[
				"m_po",
				"m_poligonPath"
			],
			[
				"Po",
				"PoligonSegment"
			],
			[
				"pro",
				"prototype"
			],
			[
				"m",
				"m_segments"
			],
			[
				"m_ma",
				"m_maxHeight"
			],
			[
				"m_fa",
				"m_fadingStatus"
			],
			[
				"C_LADYBUG_POLIGONPATH_STATE_",
				"C_LADYBUG_POLIGONPATH_STATE_NOT_SET"
			],
			[
				"isPoligonPathOfType",
				"isPoligonPathOfTypeFlying"
			],
			[
				"is",
				"isPoligonPathOfTypeFlying"
			],
			[
				"get",
				"getXYByPercent"
			],
			[
				"move",
				"moveUp"
			],
			[
				"isPo",
				"isPoligonPathRunning"
			],
			[
				"C_LADYBUG_POLIGONPATH_",
				"C_LADYBUG_POLIGONPATH_STATE_OPEN_ELYTRAS"
			],
			[
				"ca",
				"canvasName"
			],
			[
				"ima",
				"imageId"
			],
			[
				"mod",
				"moduleRatio"
			],
			[
				"has",
				"hasExtraParams"
			],
			[
				"m_poli",
				"m_poligonPathScale"
			],
			[
				"m_sca",
				"m_scale2"
			],
			[
				"m_pa",
				"m_viewParent"
			],
			[
				"C_LADYBUG_AUTOWALKING_",
				"C_LADYBUG_AUTOWALKING_STATE_NOT_SET"
			],
			[
				"seg",
				"segmentModule"
			],
			[
				"m_a",
				"m_autoWalkingState"
			],
			[
				"po",
				"m_poligonPath"
			],
			[
				"isIn",
				"isInsideCurrentSegment"
			],
			[
				"va",
				"validateWalkMovement"
			],
			[
				"C_au",
				"C_LADYBUG_AUTOWALKING_STATE_WALKING"
			],
			[
				"C",
				"C_POLIGONPATH_DIRECTION_NORMAL"
			],
			[
				"m_au",
				"m_autoWalkingState"
			],
			[
				"_y",
				"_y2"
			],
			[
				"_x",
				"_x2"
			],
			[
				"_",
				"_y1"
			],
			[
				"START",
				"startAnimation"
			],
			[
				"C_ani",
				"C_ANIM_STAND"
			],
			[
				"C_",
				"C_ANIM_MOVING"
			],
			[
				"m_cu",
				"m_currentAnimationId"
			],
			[
				"m_ladybug_",
				"m_ladybug_normal_img"
			],
			[
				"m_is",
				"m_is_standing"
			],
			[
				"m_fr",
				"m_currentFrame"
			],
			[
				"prom",
				"promCounter"
			],
			[
				"m_la",
				"m_ladybug_normal_img"
			],
			[
				"m_ro",
				"m_rotationDirection"
			],
			[
				"Bit",
				"BitmapManagerItem"
			],
			[
				"m_walkR",
				"m_walkRight_img"
			],
			[
				"m_wa",
				"m_walking_frame_counter"
			],
			[
				"m_le",
				"m_walkLeft_img"
			],
			[
				"wa",
				"m_walking_frame"
			],
			[
				"m_el",
				"m_elytra_right_img"
			],
			[
				"yel",
				"yellowLayer"
			],
			[
				"m_re",
				"m_resourceManager"
			],
			[
				"Soun",
				"SoundManager"
			],
			[
				"loa",
				"loadingTimeout"
			],
			[
				"m_ke",
				"m_keyPath"
			]
		]
	},
	"buffers":
	[
		{
			"file": "controllers/flows/playFlow.js",
			"settings":
			{
				"buffer_size": 5956,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "controllers/entities/ladybug.js",
			"settings":
			{
				"buffer_size": 42533,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"contents": "Garden.self = null;\n\nGarden.C_UPDATE_FRECUENCY = 2000;\n\nfunction Garden() \n{\n    Garden.self = this;\n\n    this.m_viewParent = null;\n    this.m_currentTree = null;\n    this.m_bakground = null;\n    this.m_ladybug = null;\n\n    this.m_idProcessUpdate = null;\n    this.m_incommingLadybugs = [];\n    this.m_animeteNewIncommingWishes = false;\n    // Used in IntroView screen to stop updating while help is running.\n    this.m_stopGetAllWishesWhileHelpIsRunning = false;\n\n    Garden.prototype.initWithViewAndTreeAndBackground = function (_viewParent) \n    {\n        this.m_viewParent = _viewParent;\n        this.m_currentTree = _viewParent.getDataContext().m_tree;\n        this.m_background = _viewParent.getDataContext().m_background;\n        this.m_ladybug = _viewParent.getDataContext().m_ladybug;\n    };\n\n    Garden.prototype.handleInputs = function () \n    {\n    };\n\n    Garden.prototype.implementGameLogic = function () \n    {\n        for (var i = this.m_incommingLadybugs.length - 1; i >= 0; i--) \n        {\n            this.m_incommingLadybugs[i].implementGameLogic();\n\n            // Remove item if it reaches travel's end.\n            if (this.m_incommingLadybugs[i].isPoligonPathFinished() === true)\n            {\n                this.m_incommingLadybugs[i].endUsingPoligonPath();  \n                this.m_incommingLadybugs.splice(i,1);                \n            }\n        }\n    };\n\n    Garden.prototype.render = function () \n    {\n        for (var i = this.m_incommingLadybugs.length - 1; i >= 0; i--) \n        {\n            this.m_incommingLadybugs[i].render();\n        }\n    };\n\n    Garden.prototype.stopGetAllWishesWhileHelpIsRunning = function () \n    {\n        this.m_stopGetAllWishesWhileHelpIsRunning = true;\n    };\n\n    Garden.prototype.startUpdateProcess = function () \n    {\n        if (Garden.self.m_idProcessUpdate === null)\n        {\n            Garden.self.m_idProcessUpdate = setTimeout(this.updateProcess, Garden.C_UPDATE_FRECUENCY);  \n        }\n    };\n\n    Garden.prototype.stopUpdateProcess = function () \n    {\n        if (Garden.self.m_idProcessUpdate !== null)\n        {\n            window.clearInterval(Garden.self.m_idProcessUpdate);\n            Garden.self.m_idProcessUpdate = null;   \n        }   \n    };\n\n    Garden.prototype.updateProcess = function () \n    {\n        callWebService\n        (\n            'GET',\n            'services/wishflowerGetAll', \n            function(_errorCode)\n            {\n                msglog(\"CallWebService error:\" + _errorCode);\n            },\n            function(_data)\n            {\n                var arrWishes = JSON.parse(_data);\n\n                if (Garden.self.m_currentTree.areCreatedAllLeaves() === true)\n                {\n                    Garden.self.m_currentTree.updateWishes(arrWishes, Garden.self.onUpdatedNode);\n                    Garden.self.m_animeteNewIncommingWishes = true;\n                \n                    if (Garden.self.m_stopGetAllWishesWhileHelpIsRunning === true)\n                    {\n                        console.log(\"STOP PROCESS WHILE HELP IS RUNNING\");\n                        Garden.self.stopUpdateProcess();\n                        Garden.self.m_stopGetAllWishesWhileHelpIsRunning = false;\n                    }\n                    else\n                    {\n                        console.log(\"NEW UPDATE PROCESS\");\n                        Garden.self.m_idProcessUpdate = setTimeout(Garden.self.updateProcess, Garden.C_UPDATE_FRECUENCY);\n                    }\n                }\n                else\n                {           \n                    console.log(\"NEW UPDATE PROCESS\");\n                    Garden.self.m_idProcessUpdate = setTimeout(Garden.self.updateProcess, Garden.C_UPDATE_FRECUENCY);\n                } \n             }\n        );\n    };\n\n    Garden.prototype.onUpdatedNode = function (_node) \n    {  \n        if (Garden.self.m_animeteNewIncommingWishes === true)\n        {\n            // Create a new flying ladybug.\n            var incommingLadybug = new Ladybug();\n            incommingLadybug.initWithType(Garden.self.m_viewParent, Ladybug.C_LADYBUG_TYPE_WISHMASTER);\n            incommingLadybug.startNewWishAnimation(Garden.self.m_background, Garden.self.m_currentTree, _node.getHash());\n            Garden.self.m_incommingLadybugs.push(incommingLadybug);\n        }\n    }\n\n    Garden.prototype.addWish = function (_wishMessage, _parent, _successCallback, _errorCallback) \n    {   \n        if (_wishMessage === \"\")\n        {\n            console.log(\"Wish not added, empty wish.\");\n        }\n        else\n        {\n            // Avoid new wish be shown after insertion and let ladybug perform travel to flower.\n            this.stopUpdateProcess();\n\n            callWebService\n            (\n                'POST',\n                'services/wishflowerAddWish?wish=' + _wishMessage, \n                function(_errorCode)\n                {\n                    msglog(\"CallWebService error:\" + _errorCode);\n                    Garden.startUpdateProcess();\n\n                    if (typeof _errorCallback != 'undefined' && _errorCallback !== null)\n                        _errorCallback(_parent, _errorCode);\n                },\n                function(_data)\n                {\n                    if (_data === \"\")\n                    {\n                        console.log(\"Wish not added, tree is full.\");\n                    }\n                    else\n                    {\n                        console.log(\"Wish added.\");\n                    }\n                    \n                    if (typeof _successCallback != 'undefined' && _successCallback !== null)\n                        _successCallback(_parent, _data);\n                }\n            );  \n        }\n    };\n\n    Garden.prototype.logWishes = function () \n    {   \n        console.log(Garden.self.m_currentTree.getWishes());\n    };\n\n    Garden.prototype.logCurrentTree = function () \n    {   \n        console.log(Garden.self.m_currentTree.dump());\n    };\n    \n    Garden.prototype.performALadybugApparition = function (_tree, _ladybug, _poligonPath)\n    {\n        // Make a path from root to the middle of tree's first branch.\n        var trunkNode = _tree.getFirstBranch();\n        var trunkSegment = new PoligonSegment();\n        trunkSegment.init(trunkNode.m_x1, trunkNode.m_y1, trunkNode.m_x2, trunkNode.m_y2);\n\n        var endPosition = trunkSegment.getXYByPercent(Globals.C_START_POSITION_PERCENT); \n        var trunkWidth = _ladybug.getScaleToSpecificWidth(trunkNode.m_width * 2); \n\n        var tmpSegment = new PoligonSegment();\n        tmpSegment.initWithExtraParams(\n            trunkNode.m_x1, trunkNode.m_y1 + 20, 0.01, 0.5, \n            endPosition.x, endPosition.y, trunkWidth, 1);\n        //tmpSegment.setVelocityRatio(0.2);\n        //***TODO: sl terminar los test dejar solamente la línea de arriba.\n        tmpSegment.setVelocityRatio(5);\n\n        _poligonPath.clearSegments();\n        _poligonPath.addSegmentObject(tmpSegment);\n\n        // Activate ladybug walking.\n        _ladybug.setAtCurrentSegmentStartPosition();   \n        _ladybug.startPoligonWalking();\n        _ladybug.setVisible(true);\n    };\n   \n    Garden.prototype.performLadybugFindTarget = function (_tree, _ladybug, _poligonPath)\n    {\n        // Make a path from root to the middle of tree's first branch.\n        var trunkNode = _tree.getFirstBranch();\n        var trunkWidth = _ladybug.getScaleToSpecificWidth(trunkNode.m_width * 2); \n\n        var trunkSegment = new PoligonSegment();\n        trunkSegment.init(trunkNode.m_x1, trunkNode.m_y1, trunkNode.m_x2, trunkNode.m_y2);\n\n        var startPosition = trunkSegment.getXYByPercent(Globals.C_START_POSITION_PERCENT); \n        var endPosition = trunkSegment.getXYByPercent(100); \n\n        var tmpSegment = new PoligonSegment();\n        tmpSegment.initWithExtraParams(\n            startPosition.x, startPosition.y, trunkWidth, 1, \n            endPosition.x, endPosition.y, trunkWidth, 1);\n        //tmpSegment.setVelocityRatio(0.2);\n        //***TODO: al terminar los test dejar solamente la línea de arriba.\n        tmpSegment.setVelocityRatio(5);\n\n        _poligonPath.clearSegments();\n        _poligonPath.addSegmentObject(tmpSegment);\n\n        // Activate ladybug walking.\n        _ladybug.setAtCurrentSegmentStartPosition();   \n        _ladybug.startPoligonWalking();\n        _ladybug.setVisible(true);\n    };\n}\n",
			"file": "controllers/entities/garden.js",
			"file_size": 8565,
			"file_write_time": 131401245637526156,
			"settings":
			{
				"buffer_size": 8350,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			}
		},
		{
			"file": "controllers/wishflowerController.js",
			"settings":
			{
				"buffer_size": 2224,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 104.0,
		"last_filter": "Package Control: install",
		"selected_items":
		[
			[
				"Package Control: install",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Upgrade Package"
			]
		],
		"width": 416.0
	},
	"console":
	{
		"height": 153.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'df21e130d211cfc94d9b0905775a7c0f' + '1e3d39e33b79698005270310898eea76'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/activities",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/entities",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/flows"
	],
	"file_history":
	[
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/flows/introFlow.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/entities/animation.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/entities/keyPathControl.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/entities/inputControl.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/entities/ladybug.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/entities/garden.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/index.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/flows/playFlow.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/activities/wishflowerPlayActivity.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/activities/wishflowerIntroActivity.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/activities/wishflowerHelpActivity.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/lib/chel-dist/js/keyboardManager.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower_prj/wishflower/controllers/entities/treeNode.js",
		"/D/Mios/Programas/wishflower/controllers/entities/messageControl.js",
		"/D/Mios/Programas/wishflower/config/globalDefinitions.js",
		"/D/Mios/Programas/wishflower/controllers/activities/wishflowerPlayActivity.js",
		"/D/Mios/Programas/wishflower/controllers/entities/garden.js",
		"/D/Mios/Programas/wishflower/controllers/entities/ladybug.js",
		"/D/Mios/Programas/wishflower/controllers/wishflowerContext.js",
		"/D/Mios/Programas/wishflower/controllers/entities/treeNode.js",
		"/D/Mios/Programas/wishflower/controllers/entities/playFlow.js",
		"/D/Mios/Programas/wishflower/controllers/entities/helpFlow.js",
		"/D/Mios/Programas/wishflower/controllers/entities/introFlow.js",
		"/D/Mios/Programas/wishflower/controllers/wishflowerController.js",
		"/D/Mios/Programas/wishflower/models/db_wish.js",
		"/D/Mios/Programas/wishflower/controllers/entities/poligonPath.js",
		"/D/Mios/Programas/wishflower/controllers/entities/inputControl.js",
		"/D/Mios/Programas/wishflower/controllers/entities/keyPathControl.js",
		"/D/Mios/Programas/wishflower/controllers/activities/wishflowerInputControlsActivity.js",
		"/D/Mios/Programas/wishflower/lib/chel-dist/js/canvasControl.js",
		"/D/Mios/Programas/wishflower/lib/chel-dist/js/keyboardManager.js",
		"/D/Mios/Programas/wishflower/index.js",
		"/D/Mios/Programas/wishflower/controllers/services/wishflower.ServiceMock.js",
		"/D/Mios/Programas/wishflower/controllers/services/wishflower.Service.js",
		"/D/Mios/Programas/wishflower/views/index.js",
		"/D/Mios/Programas/wishflower/controllers/entities/keypathControl.js",
		"/D/Mios/Programas/wishflower/controllers/index.js",
		"/D/Mios/Programas/wishflower/views/wishflowerView.html",
		"/D/Mios/Programas/wishflower/lib/chel-dist/js/viewManager.js",
		"/D/Mios/Programas/wishflower/controllers/activities/wishflowerMenuActivity.js",
		"/D/Mios/Programas/wishflower/controllers/activities/wishflowerHelpActivity.js",
		"/D/Mios/Programas/wishflower/controllers/activities/wishflowerAboutActivity.js",
		"/D/Mios/Programas/wishflower/controllers/activities/wishflowerIntroActivity.js",
		"/D/Mios/Programas/wishflower/controllers/activities/wishflowerLadybugTestActivity.js",
		"/D/Mios/Programas/wishflower/controllers/activities/wishflowerLadybugWalkingPathActivity.js",
		"/D/Mios/Programas/wishflower/controllers/activities/wishflowerImageFilterTestActivity.js",
		"/D/Mios/Programas/wishflower/controllers/activities/wishflowerLadybugFlyingPathActivity.js",
		"/D/Mios/Programas/wishflower/controllers/activities/wishflowerHelpTestActivity.js",
		"/D/Mios/Programas/wishflower/lib/chel-dist/js/chlib.js",
		"/D/Mios/Programas/wishflower/lib/chel-dist/js/mouseManager.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/entities/animation.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/config/globalDefinitions.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/lib/chel-dist/js/consts.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/lib/chel-dist/js/viewManager.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/lib/chel-dist/js/chlib.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/entities/ladybug.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/wishflowerController.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/lib/chel-dist/js/canvasControl.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/activities/wishflowerHelpTestActivity.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/index.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/errorPageController.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/index.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/views/wishflowerView.html",
		"/C/workspace/Bunge/Wokspaces/cfs-simulators/Isla de Carga de Líquidos/RyDSimulator-PruebaIntegral-PLC-v3.js",
		"/C/workspace/Bunge/Wokspaces/cfs-simulators/Isla de Carga de Líquidos/IslaDeCargaSimulator - RyD - Test Automatizado - v3.js",
		"/C/workspace/Bunge/Wokspaces/cfs-simulators/Isla de Carga de Líquidos/IslaDeCargaSimulator.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/activities/wishflowerPlayActivity.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/entities/treeNode.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/views/errorPageView.html",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/entities/garden.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/models/db_wish.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/models/db_wish_schema.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/services/wishflower.Service.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/services/wishflower.ServiceMock.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/services/wishflower.Route.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/models/index.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/wishflowerContext.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/views/index.js",
		"/C/Users/mfontana/Mios/Personal/Programas/_back/wishflower-master/controllers/entities/db_wish.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/node_modules/mongoose/node_modules/hooks-fixed/README.md",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/entities/chatInterpeter.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/README.md",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/server/serverOrchesta.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/server/protocolMessages.js",
		"/C/Users/mfontana/Mios/Proyectos/Bunge/ISSUES/ISSUE-Phone4g/emulador/Campana/Demo.log",
		"/C/Users/mfontana/Mios/Proyectos/Bunge/ISSUES/ISSUE-Phone4g/emulador/Campana/index.html",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/models/_old index.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/services/errorPage.Service.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/entities/playFlow.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/entities/flower.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/services/errorPage.Route.js",
		"/C/workspace/Bunge/Wokspaces/CFS/cfs-simulators/Isla de Carga de Liquidos/RyDSimulator-PruebaIntegral-PLC-v3.js",
		"/C/workspace/Bunge/Wokspaces/CFS/cfs-simulators/Isla de Carga de Liquidos/IslaDeCargaSimulator - RyD - Test Automatizado - v3.js",
		"/C/workspace/Bunge/Wokspaces/CFS/cfs-simulators/Isla de Carga de Liquidos/Humedimetro - v1.js",
		"/C/Users/mfontana/Mios/Personal/Programas/_back/wishflower-master/controllers/wishflowerController.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/lib/chel-dist/js/bitmapManager.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/activities/wishflowerImageFilterTestActivity.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/entities/bitmapFilter.js",
		"/C/Users/mfontana/Mios/Personal/Programas/_back/politicfight/politicfight.appspot.com_files/guy_bad_j.anim.js",
		"/C/Users/mfontana/Mios/Personal/Programas/_back/politicfight/politicfight.appspot.com_files/guy.sprites.js",
		"/C/Users/mfontana/Mios/Personal/Programas/_back/politicfight/politicfight.appspot.com_files/animation.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/entities/poligonPath.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/activities/wishflowerLadybugWalkingPathActivity.js",
		"/C/Users/mfontana/Mios/Today/python-docs-samples/appengine/flexible/multiple_services/static-service/app.yaml",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/entities/background.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/activities/wishflowerLadybugFlyingPathActivity.js",
		"/C/Users/mfontana/Mios/Personal/Programas/_back/wishflower_old/wishflower/controllers/wishflowerController.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/activities/wishflowerLadybugTestActivity.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/activities/wishflowerAboutActivity.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/entities/backgroung.js",
		"/C/Users/mfontana/AppData/Local/Microsoft/Windows/Temporary Internet Files/Content.IE5/8Z23BGSQ/Hipotecario[1].apk",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/activities/wishflowerMenuActivity.js",
		"/C/Users/mfontana/AppData/Roaming/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/C/Users/mfontana/AppData/Roaming/Sublime Text 3/Packages/SublimeLinter/Default (Windows).sublime-keymap",
		"/C/Users/mfontana/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/lib/chel-1.0.1-dist/js/viewManager.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/node_modules/express/node_modules/type-is/node_modules/mime-types/node_modules/mime-db/db.json",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/lib/chel-dist/js/keyboardManager.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/lib/chel-dist/History.md",
		"/C/Users/mfontana/Downloads/criminal case against-you  I78 ITQ-KL4.rar",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/lib/chel-dist/js/storageManager.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/lib/chel-dist/js/mouseManager.js",
		"/C/Users/mfontana/Mios/Personal/Programas/politicfight/politicfight.appspot.com_files/joystickMngr.js",
		"/C/workspace/banco-hipotecario/bancamovil-workspace/bancamovil-mobile-eclipse/FE_App_Android_3.4.0-SNAPSHOT/res/raw/gtm_tbj5bl",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/entities/requestMessages.js",
		"/C/Users/mfontana/Mios/Personal/Programas/OrchestaHeroku/orchesta/controllers/wishflowerController.js",
		"/C/Users/mfontana/Mios/Personal/Programas/wishflower/controllers/activities/wishflowerHelpActivity.js",
		"/C/Users/mfontana/Mios/Personal/Programas/politicfight/politicfight.appspot.com_files/animated.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"C:\\Users\\mfontana\\Mios\\Personal\\Programas\\wishflower_prj\\wishflower",
			"D:\\Mios\\Programas\\wishflower",
			"C:\\Users\\mfontana\\Mios\\Personal\\Programas\\wishflower"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"stopGetAllWishesWhileHelpIsRunning",
			"m_stopGetAllWishesWhileHelpIsRunning",
			"STOP PROCESS",
			"starUpdateProcess",
			"m_sideToSideMovementsCount",
			"stringify",
			"is side to",
			"isSideToSideFinished",
			"startSideToSideAnimation",
			"moveSideToSide",
			"moveLogic",
			"visible",
			"m_parentLadybugTouched",
			"setLadyBugTouched",
			"sidetoside",
			"startSideToSideAnimation",
			"end\"",
			" end\"",
			"changeFrameSideToSide",
			"setInfiniteLoop",
			"infinite",
			"changeFrameSidetoSide",
			"m_frameCounter",
			"}",
			"m_frameCounter",
			"new",
			"new\"",
			"new",
			"infinite",
			"m_frameCounter",
			"m_onStartFrameEvent",
			"forceAnimation_STAND",
			"reset",
			"startAnimation",
			"startSideToSideAnimation",
			"+",
			"startSideToSideAnimation",
			"m_onEndAnimationEvent",
			"setOnEndAnimationEvent",
			"startAnimation",
			"forceAnimation_STAND",
			"startAnimation",
			"startSideToSideAnimation",
			"forceAnimation_STAND",
			"FindIn",
			"finding target",
			"90",
			"m_currentFrame",
			"m_arrAnimations",
			"startFrameSidetoSide",
			"sidetoside",
			"isSideToSideAnimation",
			"flyingAnimation",
			"moveLogicOpening",
			"moveLogic",
			"startFrameRotatingLeftEvent",
			"startFrameSidetoSide",
			"isAnimation_SIDE_TO_SIDE",
			"startFrameRotatingLeftEvent",
			"isPoligonPathStarted",
			"C_LADYBUG_POLIGONPATH_STATE_OPEN_ELYTRAS",
			"C_LADYBUG_POLIGONPATH_STATE_WALKING",
			"rotateLeft",
			"C_ANIM_ROTATING_LEFT",
			"rotateLeft",
			"C_ANIM_ROTATING_LEFT",
			"rotateLeft",
			"moveLogicOpening",
			"isAnimation_STAND",
			"C_LADYBUG_POLIGONPATH_STATE_SETTING_ANGLE",
			"sendWishRequestedByUser",
			"m_ladybug",
			"createBranchNode",
			"setIconTouched",
			"m_icon",
			"m_iconConfirmation",
			"m_icon",
			"m_iconConfirmation",
			"updateIconPositionAtEndOfSegment",
			"m_btnBack",
			"ctree_leave_closed.png",
			"log.png",
			"ladybug_normal",
			"ctree_root",
			"ctree_root.png",
			"ctree_root",
			"glif-sub",
			"glif-down-arrow",
			"glif-left-arrow",
			"initWithViewAndTree",
			"console",
			"m_totalLeaves",
			"m_treeGrowedLeaves",
			"C_TREE_FLOWERS",
			"C_GENERATION_LEAVE_QTTY",
			"--",
			"---",
			"m_totalLeaves",
			"initWithViewAndTreeAndBackground",
			"m_currentTree",
			"m_idProcessUpdate",
			"setTimeout",
			"stopUpdateProcess",
			"starUpdateProcess",
			"stopUpdatingProcessAfterUpdateWishes",
			"m_stopUpdatingProcessAfterUpdateWishes",
			"stopUpdateProcess",
			"m_stopUpdatingProcessAfterUpdateWishes",
			"stopUpdatingProcessAfterUpdateWishes",
			"m_stopUpdatingProcessAfterUpdateWishes",
			"addWish",
			"setRetur",
			"return",
			"setre",
			"setreturnpre",
			"m_totalLeaves",
			"areCreatedAllLeaves",
			"wish added",
			"updateWishes",
			"m_incommingLadybugs",
			"onUpdatedNode",
			"updateWishes",
			"m_animeteNewIncommingWishes",
			"C_UPDATE_FRECUENCY",
			"areCreatedAllLeaves",
			"m_animeteNewIncommingWishes",
			"m_onConfirmationCallback",
			"registerOnConfirm"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "controllers/flows/playFlow.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 5956,
						"regions":
						{
						},
						"selection":
						[
							[
								3345,
								3345
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1055.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "controllers/entities/ladybug.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 42533,
						"regions":
						{
						},
						"selection":
						[
							[
								10240,
								10240
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 4393.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "controllers/entities/garden.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8350,
						"regions":
						{
						},
						"selection":
						[
							[
								1608,
								1642
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 483.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "controllers/wishflowerController.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2224,
						"regions":
						{
						},
						"selection":
						[
							[
								1089,
								1089
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"translate_tabs_to_spaces": false
						},
						"translation.x": -0.0,
						"translation.y": 495.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 216.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "app-nb.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				1
			]
		]
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 293.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 1
	}
}
